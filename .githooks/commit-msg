#! /bin/bash

# Define allowed categories, file types, and standard commit types
allowed_categories=$(jq -r '.allowedCategories | join("|")' ./src/commit-config.json)
allowed_file_types=$(jq -r '.allowedFileTypes | join("|")' ./src/commit-config.json)
standard_commit_types="feat|feature|fix|hotfix|build|refactor|docs|test|chore|style|perf|ci"

# Get the commit message
commit_msg=$(cat "$1")

# Regex pattern to match the required format:
# It supports <standard-type>: <message> and <category>:<file-type>: <message>
regex="^(${standard_commit_types}): .+|^(${allowed_categories}):(${allowed_file_types}): .+"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Validate commit message against the regex
if [[ ! $commit_msg =~ $regex ]]; then
  echo -e "\n${RED}Invalid commit message format.${NC}\n"
  echo -e "${YELLOW}Use one of the following formats:${NC}"
  echo -e "${GREEN}1. <standard-type>: <message>${NC}"
  echo -e "   Examples: ${GREEN}feat: add new login feature${NC}"
  echo -e "             ${GREEN}fix: correct user profile picture display bug${NC}"
  echo -e "${GREEN}2. <category>:<file-type>: <message>${NC}"
  echo -e "   Examples: ${GREEN}ai:courses: neural nets in depth from blah blah${NC}"
  echo -e "             ${GREEN}music:album: exploring jazz classics${NC}"
  echo -e "             ${GREEN}web:feature: implemented dark mode${NC}"
  exit 1  # Exit with failure status to prevent the commit
fi